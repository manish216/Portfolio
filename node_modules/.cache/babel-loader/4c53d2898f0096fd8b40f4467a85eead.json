{"ast":null,"code":"var _jsxFileName = \"A:\\\\EXCEL\\\\master's\\\\resume syncer\\\\portfolio\\\\src\\\\components\\\\title-message\\\\title-message.component.jsx\";\nimport React, { useRef, useState, useEffect, useCallback } from \"react\";\nimport Typewriter from \"typewriter-effect\";\nimport styled from \"styled-components\";\nimport { useTrail, animated, useTransition } from 'react-spring';\nimport styles from \"./titleMessage.module.css\"; // for text\n\nconst items = ['HI, I am ', 'Manish Reddy Challamala'];\nconst config = {\n  mass: 5,\n  tension: 2000,\n  friction: 200\n}; // for text\n\nconst MyTitleMessage = styled.h1`\n\n  position: absolute;\n  width: 100%;\n  top: 28rem;\n  z-index: 1;\n  margin-top: -120px;\n  text-align: center;\n\n  strong {\n    font-size: 1.25em;\n  }\n  div {\n    color: ${props => props.theme.textColor};\n\n    text-shadow: 0px 2px 5px rgba(0, 0, 0, 0.4);\n    font-weight: 100;\n\n    letter-spacing: 4px;\n\n    .main {\n      font-size: 25px;\n      color: #fff;\n\n    }\n\n    .sub {\n      font-size: 20px;\n      color: #fff;\n      letter-spacing: 2px;\n    }\n  }\n`;\n\nconst TitleMessage = () => {\n  // const [toggle, set] = useState(true)\n  // const trail = useTrail(items.length, {\n  //   config,\n  //   opacity: toggle ? 1 : 0,\n  //   x: toggle ? 0 : 20,\n  //   height: toggle ? 80 : 0,\n  //   from: { opacity: 0, x: 20, height: 0 },\n  // })\n  // second example\n  const ref = useRef([]);\n  const [items, set] = useState([]);\n  const transitions = useTransition(items, null, {\n    from: {\n      opacity: 0,\n      height: 0,\n      innerHeight: 0,\n      transform: 'perspective(600px) rotateX(0deg)',\n      color: '#FFF'\n    },\n    enter: [{\n      opacity: 1,\n      height: 80,\n      innerHeight: 50\n    }, {\n      transform: 'perspective(600px) rotateX(0deg)',\n      color: '#FFF'\n    }, {\n      transform: 'perspective(600px) rotateX(0deg)'\n    }],\n    leave: [{\n      color: '#fff'\n    }, {\n      innerHeight: 0\n    }, {\n      opacity: 0,\n      height: 0\n    }],\n    update: {\n      color: '#fff'\n    }\n  });\n  const reset = useCallback(() => {\n    ref.current.map(clearTimeout);\n    ref.current = [];\n    set([]);\n    ref.current.push(setTimeout(() => set(['Hi, I am ', 'Manish Reddy Challamala']), 2000));\n  }, []);\n  useEffect(() => void reset(), []); //\n\n  return /*#__PURE__*/React.createElement(MyTitleMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titleMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, transitions.map(({\n    item,\n    props: {\n      innerHeight,\n      ...rest\n    },\n    key\n  }) => /*#__PURE__*/React.createElement(animated.div, {\n    className: \"transitions-item\",\n    key: key,\n    style: rest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    style: {\n      overflow: 'hidden',\n      height: innerHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, item)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sub\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typewriter, {\n    options: {\n      strings: [\"ML Engineer\", \"Data Scientist\", \"Data Engineer\", \"Software Developer\"],\n      autoStart: true,\n      loop: true,\n      delay: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default TitleMessage;","map":{"version":3,"sources":["A:/EXCEL/master's/resume syncer/portfolio/src/components/title-message/title-message.component.jsx"],"names":["React","useRef","useState","useEffect","useCallback","Typewriter","styled","useTrail","animated","useTransition","styles","items","config","mass","tension","friction","MyTitleMessage","h1","props","theme","textColor","TitleMessage","ref","set","transitions","from","opacity","height","innerHeight","transform","color","enter","leave","update","reset","current","map","clearTimeout","push","setTimeout","item","rest","key","overflow","strings","autoStart","loop","delay"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport Typewriter from \"typewriter-effect\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useTrail, animated, useTransition} from 'react-spring';\r\nimport styles from \"./titleMessage.module.css\";\r\n\r\n// for text\r\nconst items = ['HI, I am ', 'Manish Reddy Challamala']\r\nconst config = { mass: 5, tension: 2000, friction: 200 }\r\n\r\n// for text\r\n\r\n\r\nconst MyTitleMessage = styled.h1`\r\n\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 28rem;\r\n  z-index: 1;\r\n  margin-top: -120px;\r\n  text-align: center;\r\n\r\n  strong {\r\n    font-size: 1.25em;\r\n  }\r\n  div {\r\n    color: ${props => props.theme.textColor};\r\n\r\n    text-shadow: 0px 2px 5px rgba(0, 0, 0, 0.4);\r\n    font-weight: 100;\r\n\r\n    letter-spacing: 4px;\r\n\r\n    .main {\r\n      font-size: 25px;\r\n      color: #fff;\r\n\r\n    }\r\n\r\n    .sub {\r\n      font-size: 20px;\r\n      color: #fff;\r\n      letter-spacing: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nconst TitleMessage = () => {\r\n  // const [toggle, set] = useState(true)\r\n  // const trail = useTrail(items.length, {\r\n  //   config,\r\n  //   opacity: toggle ? 1 : 0,\r\n  //   x: toggle ? 0 : 20,\r\n  //   height: toggle ? 80 : 0,\r\n  //   from: { opacity: 0, x: 20, height: 0 },\r\n  // })\r\n\r\n// second example\r\n  const ref = useRef([])\r\n  const [items, set] = useState([])\r\n\r\n  const transitions = useTransition(items, null, {\r\n    from: { opacity: 0, height: 0, innerHeight: 0, transform: 'perspective(600px) rotateX(0deg)', color: '#FFF' },\r\n    enter: [\r\n      { opacity: 1, height: 80, innerHeight: 50 },\r\n      { transform: 'perspective(600px) rotateX(0deg)', color: '#FFF'  },\r\n      { transform: 'perspective(600px) rotateX(0deg)' },\r\n    ],\r\n    leave: [{ color: '#fff' }, { innerHeight: 0 }, { opacity: 0, height: 0 }],\r\n    update: { color: '#fff' },\r\n  })\r\n\r\n  const reset = useCallback(() => {\r\n    ref.current.map(clearTimeout)\r\n    ref.current = []\r\n    set([])\r\n    ref.current.push(setTimeout(() => set(['Hi, I am ', 'Manish Reddy Challamala']), 2000))\r\n\r\n  }, [])\r\n\r\n  useEffect(() => void reset(), [])\r\n\r\n//\r\n\r\n      return(\r\n      <MyTitleMessage>\r\n        <div className=\"titleMessage\">\r\n            <div>\r\n              {transitions.map(({ item, props: { innerHeight, ...rest }, key }) => (\r\n                <animated.div className=\"transitions-item\" key={key} style={rest} >\r\n                  <animated.div style={{ overflow: 'hidden', height: innerHeight }}>{item}</animated.div>\r\n                </animated.div>\r\n              ))}\r\n            </div>\r\n            <div className=\"heading\">\r\n                {/* for text */}\r\n                    {/* <div className={styles.trails_main} onClick={() => set(state => !state)}>\r\n                      <div>\r\n                        {trail.map(({ x, height, ...rest }, index) => (\r\n                          <animated.div\r\n                            key={items[index]}\r\n                            className={styles.trails_text}\r\n                            style={{ ...rest, transform: x.interpolate(x => `translate3d(0,${x}px,0)`) }}>\r\n                            <animated.div style={{ height }}>{items[index]}</animated.div>\r\n                          </animated.div>\r\n                        ))}\r\n                      </div>\r\n                    </div> */}\r\n\r\n                {/* for text */}\r\n                {/* <div className=\"main text-center mb-3\">\r\n                    Hi, I am\r\n          <br />\r\n                    <span>\r\n                        <strong>Manish Reddy Challamala</strong>\r\n                    </span>\r\n                </div> */}\r\n                <div className=\"sub\">\r\n                    <Typewriter\r\n                        options={{\r\n                            strings: [\"ML Engineer\",\"Data Scientist\", \"Data Engineer\", \"Software Developer\"],\r\n                            autoStart: true,\r\n                            loop: true,\r\n                            delay: 100\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </MyTitleMessage>);\r\n};\r\n\r\nexport default TitleMessage;\r\n"]},"metadata":{},"sourceType":"module"}