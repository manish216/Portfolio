{"ast":null,"code":"var _jsxFileName = \"A:\\\\EXCEL\\\\master's\\\\resume syncer\\\\portfolio\\\\src\\\\components\\\\Grid\\\\Grid.components.jsx\";\nimport React, { useState, useRef } from 'react';\nimport { useTransition, useSpring, useChain, config } from 'react-spring';\nimport { Global, Container, Item } from './styles';\nimport data from './data';\nimport { animated } from 'react-spring';\nimport styled, { createGlobalStyle } from 'styled-components'; // import React, { Component } from 'react';\n\nconst Grid = () => {\n  const [open, set] = useState(false);\n  const springRef = useRef();\n  const {\n    size,\n    opacity,\n    ...rest\n  } = useSpring({\n    ref: springRef,\n    config: config.stiff,\n    from: {\n      size: '30%',\n      background: 'hotpink'\n    },\n    to: {\n      size: open ? '100%' : '20%',\n      background: open ? 'white' : 'hotpink'\n    }\n  });\n  const transRef = useRef();\n  const transitions = useTransition(open ? data : [], item => item.name, {\n    ref: transRef,\n    unique: true,\n    trail: 400 / data.length,\n    from: {\n      opacity: 0,\n      transform: 'scale(0)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'scale(1)'\n    },\n    leave: {\n      opacity: 0,\n      transform: 'scale(0)'\n    }\n  }); // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: { ...rest,\n      width: size,\n      height: size\n    },\n    onClick: () => set(open => !open),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, transitions.map(({\n    item,\n    key,\n    props\n  }) => /*#__PURE__*/React.createElement(Item, {\n    key: key,\n    style: { ...props,\n      background: item.background\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Grid;","map":{"version":3,"sources":["A:/EXCEL/master's/resume syncer/portfolio/src/components/Grid/Grid.components.jsx"],"names":["React","useState","useRef","useTransition","useSpring","useChain","config","Global","Container","Item","data","animated","styled","createGlobalStyle","Grid","open","set","springRef","size","opacity","rest","ref","stiff","from","background","to","transRef","transitions","item","name","unique","trail","length","transform","enter","leave","width","height","map","key","props"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useTransition, useSpring, useChain, config } from 'react-spring';\r\nimport { Global, Container, Item } from './styles';\r\nimport data from './data';\r\n\r\nimport { animated } from 'react-spring';\r\nimport styled, { createGlobalStyle } from 'styled-components';\r\n// import React, { Component } from 'react';\r\n\r\n\r\n\r\nconst Grid = () =>{\r\n    const [open, set] = useState(false)\r\n\r\n    const springRef = useRef()\r\n    const { size, opacity, ...rest } = useSpring({\r\n        ref: springRef,\r\n        config: config.stiff,\r\n        from: { size: '30%', background: 'hotpink' },\r\n        to: { size: open ? '100%' : '20%', background: open ? 'white' : 'hotpink' }\r\n    })\r\n\r\n    const transRef = useRef()\r\n    const transitions = useTransition(open ? data : [], item => item.name, {\r\n        ref: transRef,\r\n        unique: true,\r\n        trail: 400 / data.length,\r\n        from: { opacity: 0, transform: 'scale(0)' },\r\n        enter: { opacity: 1, transform: 'scale(1)' },\r\n        leave: { opacity: 0, transform: 'scale(0)' }\r\n    })\r\n\r\n    // This will orchestrate the two animations above, comment the last arg and it creates a sequence\r\n    useChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6])\r\n    return (\r\n        <>\r\n            <Global />\r\n            <Container style={{ ...rest, width: size, height: size }} onClick={() => set(open => !open)}>\r\n                {transitions.map(({ item, key, props }) => (\r\n                    <Item key={key} style={{ ...props, background: item.background }} />\r\n                ))}\r\n            </Container>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Grid;\r\n\r\n"]},"metadata":{},"sourceType":"module"}