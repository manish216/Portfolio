{"ast":null,"code":"var _jsxFileName = \"A:\\\\EXCEL\\\\master's\\\\resume syncer\\\\portfolio\\\\src\\\\components\\\\projects-timeline\\\\projects-timeline3.components.jsx\";\nimport React from \"react\";\nimport { Timeline, Events, UrlButton, ImageEvent, themes, createTheme } from \"@merc/react-timeline\";\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { Button } from 'react-bootstrap'; // projects\n\nimport L_GetGitHubInfo from \"../../assests/img/projects/get_github_info.webp\";\nimport L_SmartBrain from \"../../assests/img/projects/brain.webp\";\nimport L_RoboFriends from \"../../assests/img/projects/Robofriends.webp\";\nimport L_ProductHuntClone from \"../../assests/img/projects/product_hunt_clone.webp\";\nimport L_PortfolioUsingDjango from \"../../assests/img/projects/portfolioUsingDjango.webp\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\"; // skills\n\nimport L_REACT from \"../../assests/img/skills/react.svg\";\nimport L_R from \"../../assests/img/skills/R_logo.webp\";\nimport L_PYTHON from \"../../assests/img/skills/python.svg\";\nimport L_sqlLite from \"../../assests/img/skills/SQLite.png\";\nimport L_gMap from \"../../assests/img/skills/googleMaps.png\";\nimport L_hadoop from \"../../assests/img/skills/hadoop.png\";\nimport L_Java from \"../../assests/img/skills/java.svg\";\nimport L_Tomcat from \"../../assests/img/skills/Tomcat.jpg\";\nimport L_s3 from \"../../assests/img/skills/aws-s3.png\";\nimport L_ggplot from \"../../assests/img/skills/ggplot.png\";\nimport L_colab from \"../../assests/img/skills/colab.png\";\nimport L_shiny from \"../../assests/img/skills/shinyhex.jpg\";\nimport L_Tensorflow from \"../../assests/img/skills/Tensorflow_logo.svg\";\nimport L_Keras from \"../../assests/img/skills/Keras_logo.svg\";\nimport L_jupyterNotebook from \"../../assests/img/skills/Jupyter_logo.svg\";\nimport L_Numpy from \"../../assests/img/skills/numpy-icon.svg\";\nimport L_matplotlib from \"../../assests/img/skills/Matplotlib_icon.svg.png\";\nimport L_NODE_JS from \"../../assests/img/skills/nodejs.svg\";\nimport L_EXPRESS from \"../../assests/img/skills/express.svg\";\nimport L_POSTGRESQL from \"../../assests/img/skills/postgresql.svg\";\nimport Image from \"react-bootstrap/Image\";\nimport L_REDUX from \"../../assests/img/skills/redux.svg\";\nimport L_HTML5 from \"../../assests/img/skills/html-5.svg\";\nimport L_CSS3 from \"../../assests/img/skills/css3.svg\";\nimport L_BOOTSTRAP4 from \"../../assests/img/skills/bootstrap-4.svg\";\nimport L_DJANGO from \"../../assests/img/skills/django.svg\";\nimport L_DIGITAL_OCEAN from \"../../assests/img/skills/digital-ocean.svg\";\nimport L_GIT from \"../../assests/img/skills/github-api.svg\";\nimport styles from \"./projects-timeline.styles.css\";\n\nconst ColoredLine = ({\n  color\n}) => /*#__PURE__*/React.createElement(\"hr\", {\n  style: {\n    color: color,\n    backgroundColor: color,\n    height: 1\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n});\n\nconst TimeLine3 = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"projects\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(VerticalTimeline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    className: \"vertical-timeline-element--work\",\n    contentStyle: {\n      background: 'transparent',\n      color: '#fff',\n      border: '1px #bfbfbf solid'\n    },\n    contentArrowStyle: {\n      borderRight: '7px solid  #fff'\n    },\n    date: \"Fall 2019\",\n    iconStyle: {\n      background: '#13161B',\n      color: '#fff'\n    } // icon={<WorkIcon />}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"vertical-timeline-element-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Text recognition for forensic analysis\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-column mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: '#13161B',\n      color: '#FFF',\n      paddingTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    style: {\n      background: '#13161B'\n    },\n    eventKey: \"0\",\n    className: \"p-2 text-center accordian-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  }, \"PROJECT DETAILS\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      background: '#13161B'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 45\n    }\n  }, \"Description:\"), \"On-going research to reduce the turn around time for forensic teams by analysing the hand written samples at the crime scenes using machine learning models\", /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }, \"Features:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 49\n    }\n  }, \"Analyze Handwritting samples\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 49\n    }\n  }, \"Visually Explain to the User, why the model made that choice\")), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }\n  }, \"Models:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 49\n    }\n  }, \"Feature Learning Network (FLN)   : To extract the features and soft-probabilites from the image files\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 49\n    }\n  }, \"Convolution Neural Network (CNN) : To assist Human Examiners in detecting authentic and forged hand written samples\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 49\n    }\n  }, \"Probability Graphical Models(PGM): To explain the decision made by CNN \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 49\n    }\n  }, \"GradCAM : To visually explain the decision made by CNN\")), /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 45\n    }\n  }, \"Tech used:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_PYTHON,\n    alt: \"Python\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 57\n    }\n  }), \" Python\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_Keras,\n    alt: \"Keras\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 57\n    }\n  }), \" Keras\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_Numpy,\n    alt: \"NumPy\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 57\n    }\n  }), \" NumPy\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_colab,\n    alt: \"Jupyter notebook\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 57\n    }\n  }), \" Google Colab\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-nowrap text-center sourceCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"\",\n    variant: \"dark\",\n    href: \"https://github.com/manish216/CSE-674-Project3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, \"SOURCE CODE\")))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    className: \"vertical-timeline-element--work\",\n    contentStyle: {\n      background: 'transparent',\n      color: '#fff',\n      border: '1px #bfbfbf solid'\n    },\n    contentArrowStyle: {\n      borderRight: '7px solid  #fff'\n    },\n    date: \"Fall 2019\",\n    iconStyle: {\n      background: '#13161B',\n      color: '#fff'\n    } // icon={<WorkIcon />}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"vertical-timeline-element-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \" Explainable AI \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-column mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: '#13161B',\n      color: '#FFF',\n      paddingTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    style: {\n      background: '#13161B'\n    },\n    eventKey: \"0\",\n    className: \"p-2 text-center accordian-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 37\n    }\n  }, \"PROJECT DETAILS\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      background: '#13161B'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, \"Description:\"), \" The objective of this project is to develop a machine learning model which can learn the explainable features for a task domain and learn to answer the variety of queries in that domain\", /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, \"Features:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-styles pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 49\n    }\n  }, \"Human determined features: The hand written samples are verified by human examiners\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 49\n    }\n  }, \"Deep learning features :  Representation of multi-layer artificial neural network which can automatically learn the feature representations from the data provided\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 49\n    }\n  }, \"NYTimes\")), /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 45\n    }\n  }, \"Models:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 49\n    }\n  }, \"Probability Graphical Models (PGM's): To infer the features, to say weather \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 49\n    }\n  }, \"Siamese network: A twin network that share same weights among them to learn useful features.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 49\n    }\n  }, \"Auto Encoders: Learns the compressed Learning features of the given inputs.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 49\n    }\n  }, \"word clouds are developed with help of word cloud, word co-occurrence algorithms and visualized using tableau\")), /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 45\n    }\n  }, \"Tech used:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_PYTHON,\n    alt: \"Python\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 57\n    }\n  }), \" Python\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_s3,\n    alt: \"s3\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 57\n    }\n  }), \" S3\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_hadoop,\n    alt: \"Hadoop\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 57\n    }\n  }), \" Hadoop\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_jupyterNotebook,\n    alt: \"Jupyter notebook\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 57\n    }\n  }), \" Jupyter Notebook\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-nowrap text-center sourceCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    className: \"vertical-timeline-element--work\",\n    contentStyle: {\n      background: 'transparent',\n      color: '#fff',\n      border: '1px #bfbfbf solid'\n    },\n    contentArrowStyle: {\n      borderRight: '7px solid  #fff'\n    },\n    date: \"Spring 2019\",\n    iconStyle: {\n      background: '#13161B',\n      color: '#fff'\n    } // icon={<WorkIcon />}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"vertical-timeline-element-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"Way Weather-Travel safe website\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-column mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: '#13161B',\n      color: '#FFF',\n      paddingTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Card.Header,\n    style: {\n      background: '#13161B'\n    },\n    eventKey: \"0\",\n    className: \"p-2 text-center accordian-main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 37\n    }\n  }, \"PROJECT DETAILS\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      background: '#13161B'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 45\n    }\n  }, \"Description:\"), \" Designed a user friendly web application to track the weather across multiple points on a customer journey\\u2019s roadway route\", /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 45\n    }\n  }, \"Algorithms:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 49\n    }\n  }, \"The API\\u2019s of google map and open weather were called by tomcat server and responses were plotted on google maps\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 49\n    }\n  }, \"Two types of model\\u2019s were developed to test their retrieval times\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 49\n    }\n  }, \"Model-1: without cache memory\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 49\n    }\n  }, \"Model-2: with Cache Memory\")), /*#__PURE__*/React.createElement(ColoredLine, {\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 45\n    }\n  }, \"Tech used:\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_Java,\n    alt: \"Java\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 57\n    }\n  }), \" Java\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_Tomcat,\n    alt: \"Tomcat\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 57\n    }\n  }), \" Apache Tomcat\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_HTML5,\n    alt: \"Matplotlib\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 57\n    }\n  }), \" HTML5\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_sqlLite,\n    alt: \"SQLite\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 57\n    }\n  }), \" SQLite\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: L_gMap,\n    alt: \"Google Map API\",\n    rounded: true,\n    className: \"image-style1 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 57\n    }\n  }), \" Google Map API\")))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between flex-nowrap text-center sourceCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default TimeLine3;","map":{"version":3,"sources":["A:/EXCEL/master's/resume syncer/portfolio/src/components/projects-timeline/projects-timeline3.components.jsx"],"names":["React","Timeline","Events","UrlButton","ImageEvent","themes","createTheme","VerticalTimeline","VerticalTimelineElement","Button","L_GetGitHubInfo","L_SmartBrain","L_RoboFriends","L_ProductHuntClone","L_PortfolioUsingDjango","Accordion","Card","L_R","L_sqlLite","L_gMap","L_hadoop","L_Tomcat","L_s3","L_ggplot","L_colab","L_shiny","L_matplotlib","Image","styles","ColoredLine","color","backgroundColor","height","TimeLine3","background","border","borderRight","paddingTop","Header","L_PYTHON","L_Keras","L_Numpy","L_jupyterNotebook","L_Java","L_HTML5"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport { Timeline, Events, UrlButton, ImageEvent, themes, createTheme } from \"@merc/react-timeline\";\r\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport { Button } from 'react-bootstrap';\r\n// projects\r\nimport L_GetGitHubInfo from \"../../assests/img/projects/get_github_info.webp\";\r\nimport L_SmartBrain from \"../../assests/img/projects/brain.webp\";\r\nimport L_RoboFriends from \"../../assests/img/projects/Robofriends.webp\";\r\nimport L_ProductHuntClone from \"../../assests/img/projects/product_hunt_clone.webp\";\r\nimport L_PortfolioUsingDjango from \"../../assests/img/projects/portfolioUsingDjango.webp\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n// skills\r\nimport L_REACT from \"../../assests/img/skills/react.svg\";\r\nimport L_R from \"../../assests/img/skills/R_logo.webp\";\r\nimport L_PYTHON from \"../../assests/img/skills/python.svg\";\r\nimport L_sqlLite from \"../../assests/img/skills/SQLite.png\";\r\nimport L_gMap from \"../../assests/img/skills/googleMaps.png\";\r\nimport L_hadoop from \"../../assests/img/skills/hadoop.png\";\r\nimport L_Java from \"../../assests/img/skills/java.svg\";\r\nimport L_Tomcat from \"../../assests/img/skills/Tomcat.jpg\";\r\nimport L_s3 from \"../../assests/img/skills/aws-s3.png\";\r\nimport L_ggplot from \"../../assests/img/skills/ggplot.png\";\r\nimport L_colab from \"../../assests/img/skills/colab.png\";\r\nimport L_shiny from \"../../assests/img/skills/shinyhex.jpg\";\r\nimport L_Tensorflow from \"../../assests/img/skills/Tensorflow_logo.svg\";\r\nimport L_Keras from \"../../assests/img/skills/Keras_logo.svg\";\r\nimport L_jupyterNotebook from \"../../assests/img/skills/Jupyter_logo.svg\";\r\nimport L_Numpy from \"../../assests/img/skills/numpy-icon.svg\"\r\nimport L_matplotlib from \"../../assests/img/skills/Matplotlib_icon.svg.png\";\r\nimport L_NODE_JS from \"../../assests/img/skills/nodejs.svg\";\r\nimport L_EXPRESS from \"../../assests/img/skills/express.svg\";\r\nimport L_POSTGRESQL from \"../../assests/img/skills/postgresql.svg\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport L_REDUX from \"../../assests/img/skills/redux.svg\";\r\nimport L_HTML5 from \"../../assests/img/skills/html-5.svg\";\r\nimport L_CSS3 from \"../../assests/img/skills/css3.svg\";\r\nimport L_BOOTSTRAP4 from \"../../assests/img/skills/bootstrap-4.svg\";\r\nimport L_DJANGO from \"../../assests/img/skills/django.svg\";\r\nimport L_DIGITAL_OCEAN from \"../../assests/img/skills/digital-ocean.svg\";\r\nimport L_GIT from \"../../assests/img/skills/github-api.svg\";\r\n\r\nimport styles from \"./projects-timeline.styles.css\";\r\n\r\nconst ColoredLine = ({ color }) => (\r\n    <hr\r\n        style={{\r\n            color: color,\r\n            backgroundColor: color,\r\n            height: 1\r\n        }}\r\n    />\r\n);\r\n\r\nconst TimeLine3 = () => {\r\n    return (\r\n        <div id=\"projects\">\r\n            <VerticalTimeline>\r\n                {/* Project 1 */}\r\n                <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                    contentStyle={{ background: 'transparent', color: '#fff', border: '1px #bfbfbf solid' }}\r\n                    contentArrowStyle={{ borderRight: '7px solid  #fff' }}\r\n                    date=\"Fall 2019\"\r\n                    iconStyle={{ background: '#13161B', color: '#fff' }}\r\n                // icon={<WorkIcon />}\r\n                >\r\n                    <h4 className=\"vertical-timeline-element-title\">Text recognition for forensic analysis</h4>\r\n                    <div className=\"d-flex justify-content-between flex-column mt-1\">\r\n                        <div style={{ background: '#13161B', color: '#FFF', paddingTop: '10px' }}>\r\n                            <Accordion >\r\n                                <Card>\r\n                                    <Accordion.Toggle as={Card.Header} style={{ background: '#13161B' }} eventKey=\"0\" className=\"p-2 text-center accordian-main\">\r\n                                        PROJECT DETAILS\r\n                        </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\" className=\"text-left\">\r\n                                        <Card.Body style={{ background: '#13161B' }}>\r\n                                            <strong>Description:</strong>On-going research to reduce the turn around time for forensic teams by analysing the hand written samples at the crime scenes using machine learning models\r\n                                <ColoredLine color=\"#fff\" />\r\n                                            {/* <strong>Data Sources:</strong>\r\n                                            <ul className=\"list-styles pt-1\">\r\n                                                <li>Twitter</li>\r\n                                                <li>CDC</li>\r\n                                            </ul>\r\n                                            <ColoredLine color=\"#fff\" /> */}\r\n                                            <strong>Features:</strong>\r\n                                            <ul>\r\n                                                <li>Analyze Handwritting samples</li>\r\n                                                <li>Visually Explain to the User, why the model made that choice</li>\r\n                                            </ul>\r\n                                            <strong>Models:</strong>\r\n                                            <ul>\r\n                                                <li>Feature Learning Network (FLN)   : To extract the features and soft-probabilites from the image files</li>\r\n                                                <li>Convolution Neural Network (CNN) : To assist Human Examiners in detecting authentic and forged hand written samples</li>\r\n                                                <li>Probability Graphical Models(PGM): To explain the decision made by CNN </li>\r\n                                                <li>GradCAM : To visually explain the decision made by CNN</li>\r\n                                            </ul>\r\n                                            <ColoredLine color=\"#fff\" />\r\n                                            <strong>Tech used:</strong>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_PYTHON} alt=\"Python\" rounded className=\"image-style1 m-1\"></Image> Python\r\n                                            </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_Keras} alt=\"Keras\" rounded className=\"image-style1 m-1\"></Image> Keras\r\n                                            </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_Numpy} alt=\"NumPy\" rounded className=\"image-style1 m-1\"></Image> NumPy\r\n                                            </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_colab} alt=\"Jupyter notebook\" rounded className=\"image-style1 m-1\"></Image> Google Colab\r\n                                            </span>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between flex-nowrap text-center sourceCode\">\r\n                            <Button className=\"\" variant=\"dark\" href=\"https://github.com/manish216/CSE-674-Project3\" >\r\n                                SOURCE CODE\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </VerticalTimelineElement>\r\n                {/* Project 2 */}\r\n                <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                    contentStyle={{ background: 'transparent', color: '#fff', border: '1px #bfbfbf solid' }}\r\n                    contentArrowStyle={{ borderRight: '7px solid  #fff' }}\r\n                    date=\"Fall 2019\"\r\n                    iconStyle={{ background: '#13161B', color: '#fff' }}\r\n                // icon={<WorkIcon />}\r\n                >\r\n                    <h4 className=\"vertical-timeline-element-title\"> Explainable AI </h4>\r\n                    <div className=\"d-flex justify-content-between flex-column mt-1\">\r\n                        <div style={{ background: '#13161B', color: '#FFF', paddingTop: '10px' }}>\r\n                            <Accordion >\r\n                                <Card>\r\n                                    <Accordion.Toggle as={Card.Header} style={{ background: '#13161B' }} eventKey=\"0\" className=\"p-2 text-center accordian-main\">\r\n                                        PROJECT DETAILS\r\n                        </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\" className=\"text-left\">\r\n                                        <Card.Body style={{ background: '#13161B' }}>\r\n                                            <strong>Description:</strong> The objective of this project is to develop a machine learning model which can learn the explainable features for a task domain and learn to answer the variety of queries in that domain\r\n                                <ColoredLine color=\"#fff\" />\r\n                                            <strong>Features:</strong>\r\n                                            <ul className=\"list-styles pt-1\">\r\n                                                <li>Human determined features: The hand written samples are verified by human examiners</li>\r\n                                                <li>Deep learning features :  Representation of multi-layer artificial neural network which can automatically learn the feature representations from the data provided</li>\r\n                                                <li>NYTimes</li>\r\n                                            </ul>\r\n                                            <ColoredLine color=\"#fff\" />\r\n                                            <strong>Models:</strong>\r\n                                            <ul>\r\n                                                <li>Probability Graphical Models (PGM's): To infer the features, to say weather </li>\r\n                                                <li>Siamese network: A twin network that share same weights among them to learn useful features.</li>\r\n                                                <li>Auto Encoders: Learns the compressed Learning features of the given inputs.</li>\r\n                                                <li>word clouds are developed with help of word cloud, word co-occurrence algorithms and visualized using tableau</li>\r\n                                            </ul>\r\n                                            <ColoredLine color=\"#fff\" />\r\n                                            <strong>Tech used:</strong>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_PYTHON} alt=\"Python\" rounded className=\"image-style1 m-1\"></Image> Python\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_s3} alt=\"s3\" rounded className=\"image-style1 m-1\"></Image> S3\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_hadoop} alt=\"Hadoop\" rounded className=\"image-style1 m-1\"></Image> Hadoop\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_jupyterNotebook} alt=\"Jupyter notebook\" rounded className=\"image-style1 m-1\"></Image> Jupyter Notebook\r\n                                                    </span>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between flex-nowrap text-center sourceCode\">\r\n\r\n                            {/* <Button variant=\"dark\">SEE LIVE</Button> */}\r\n                            {/* <Button className=\"\" variant=\"dark\" href=\"\" >\r\n                                SOURCE CODE\r\n                        </Button> */}\r\n                        </div>\r\n                    </div>\r\n                </VerticalTimelineElement>\r\n                {/* Project 3 */}\r\n                <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                    contentStyle={{ background: 'transparent', color: '#fff', border: '1px #bfbfbf solid' }}\r\n                    contentArrowStyle={{ borderRight: '7px solid  #fff' }}\r\n                    date=\"Spring 2019\"\r\n                    iconStyle={{ background: '#13161B', color: '#fff' }}\r\n                // icon={<WorkIcon />}\r\n                >\r\n                    <h4 className=\"vertical-timeline-element-title\">Way Weather-Travel safe website</h4>\r\n                    <div className=\"d-flex justify-content-between flex-column mt-1\">\r\n                        <div style={{ background: '#13161B', color: '#FFF', paddingTop: '10px' }}>\r\n                            <Accordion >\r\n                                <Card>\r\n                                    <Accordion.Toggle as={Card.Header} style={{ background: '#13161B' }} eventKey=\"0\" className=\"p-2 text-center accordian-main\">\r\n                                        PROJECT DETAILS\r\n                        </Accordion.Toggle>\r\n                                    <Accordion.Collapse eventKey=\"0\" className=\"text-left\">\r\n                                        <Card.Body style={{ background: '#13161B' }}>\r\n                                            <strong>Description:</strong> Designed a user friendly web application to track the weather across multiple points on a customer journey’s roadway route\r\n                                            <ColoredLine color=\"#fff\" />\r\n                                            {/* <strong>Features:</strong>\r\n                                            <ul className=\"list-styles pt-1\">\r\n                                                <li></li>\r\n                                                <li>GSC features: Features extracted using Gradient Structural Concavity (GSC) algorithm.</li>\r\n                                            </ul> */}\r\n                                            {/* <ColoredLine color=\"#fff\" /> */}\r\n                                            <strong>Algorithms:</strong>\r\n                                            <ul>\r\n                                                <li>The API’s of google map and open weather were called by tomcat server and responses were plotted on google maps</li>\r\n                                                <li>Two types of model’s were developed to test their retrieval times</li>\r\n                                                <li>Model-1: without cache memory</li>\r\n                                                <li>Model-2: with Cache Memory</li>\r\n                                            </ul>\r\n                                            <ColoredLine color=\"#fff\" />\r\n                                            <strong>Tech used:</strong>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_Java} alt=\"Java\" rounded className=\"image-style1 m-1\"></Image> Java\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_Tomcat} alt=\"Tomcat\" rounded className=\"image-style1 m-1\"></Image> Apache Tomcat\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_HTML5} alt=\"Matplotlib\" rounded className=\"image-style1 m-1\"></Image> HTML5\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_sqlLite} alt=\"SQLite\" rounded className=\"image-style1 m-1\"></Image> SQLite\r\n                                                    </span>\r\n                                                </li>\r\n                                                <li>\r\n                                                    <span className=\"p-2\">\r\n                                                        <Image src={L_gMap} alt=\"Google Map API\" rounded className=\"image-style1 m-1\"></Image> Google Map API\r\n                                                    </span>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            </Accordion>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between flex-nowrap text-center sourceCode\">\r\n                            {/* <Button variant=\"dark\">SEE LIVE</Button> */}\r\n                            {/* <Button className=\"\" variant=\"dark\" href=\"https://github.com/manish216/CSE-573-Project3\" >\r\n                                SOURCE CODE\r\n                        </Button> */}\r\n                        </div>\r\n                    </div>\r\n                </VerticalTimelineElement>\r\n            </VerticalTimeline>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeLine3;"]},"metadata":{},"sourceType":"module"}